import at.klickverbot.core.CoreObject;import at.klickverbot.debug.Debug;import at.klickverbot.drawing.Point2D;import at.klickverbot.ui.mouse.MouseoverArea;import at.klickverbot.util.Delegate;import at.klickverbot.util.DummyClipManager;import at.klickverbot.util.McUtils;/** * This class helps to solve the problem that there are no true, bubbling * RollOver-/RollOut events in ActionScript2. */class at.klickverbot.ui.mouse.MouseoverManager extends CoreObject {   /**     * Constructor.     * Private to allow no other instances.     */   private function MouseoverManager() {      m_areas = new Array();      m_clip = DummyClipManager.getInstance().createClip();      m_clip.onMouseMove = Delegate.create( this, onMouseMove );   }   /**    * Returns the only instance of the class.    *    * @return The instance of RolloverManager.    */   public static function getInstance() :MouseoverManager {      if ( m_instance == null ) {         m_instance = new MouseoverManager();      }      return m_instance;   }   public function addArea( activeArea :MovieClip, overHandler :Function,      outHandler :Function ) :Void {      Debug.assertNotNull( activeArea,         "Active rollover area must not be null." );      m_areas.push( new MouseoverArea( activeArea, overHandler, outHandler ) );   }   public function removeArea( activeArea :MovieClip ) :Boolean {   	// TODO: Refactor all classes which use removeXyz() functions to use common container classes internally?   	var found :Boolean = false;      var currentArea :MouseoverArea;      var currentIndex :Number = m_areas.length;      while ( currentArea = m_areas[ --currentIndex ] ) {      	if ( currentArea.activeArea == activeArea ) {      		m_areas.splice( currentIndex, 1 );      		found = true;      		break;      	}      }      return found;   }   private function onMouseMove() :Void {      var mousePosition :Point2D = McUtils.localToGlobal( m_clip,   	   new Point2D( m_clip._xmouse, m_clip._ymouse ) );      var currentArea :MouseoverArea;      var currentIndex :Number = m_areas.length;      while ( currentArea = m_areas[ --currentIndex ] ) {         var hovering :Boolean = currentArea.activeArea.hitTest(            mousePosition.x, mousePosition.y, true );         if ( hovering && !currentArea.currentlyOver ) {            currentArea.currentlyOver = true;            currentArea.overHandler();         } else if ( !hovering && currentArea.currentlyOver ) {         	currentArea.currentlyOver = false;            currentArea.outHandler();         }      }   }   private static var m_instance :MouseoverManager;   private var m_areas :Array;   private var m_clip :MovieClip;}